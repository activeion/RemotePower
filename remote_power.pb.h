// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remote_power.proto

#ifndef PROTOBUF_remote_5fpower_2eproto__INCLUDED
#define PROTOBUF_remote_5fpower_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace eh2tech {
class Answer;
class AnswerDefaultTypeInternal;
extern AnswerDefaultTypeInternal _Answer_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class Login;
class LoginDefaultTypeInternal;
extern LoginDefaultTypeInternal _Login_default_instance_;
class Query;
class QueryDefaultTypeInternal;
extern QueryDefaultTypeInternal _Query_default_instance_;
class QueryAnswer;
class QueryAnswerDefaultTypeInternal;
extern QueryAnswerDefaultTypeInternal _QueryAnswer_default_instance_;
class Setting;
class SettingDefaultTypeInternal;
extern SettingDefaultTypeInternal _Setting_default_instance_;
class Setting_CatFreq;
class Setting_CatFreqDefaultTypeInternal;
extern Setting_CatFreqDefaultTypeInternal _Setting_CatFreq_default_instance_;
}  // namespace eh2tech

namespace eh2tech {

namespace protobuf_remote_5fpower_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_remote_5fpower_2eproto

enum Setting_Action {
  Setting_Action_NONE = 0,
  Setting_Action_START = 1,
  Setting_Action_SHUTDOWN = 2,
  Setting_Action_Setting_Action_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Setting_Action_Setting_Action_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Setting_Action_IsValid(int value);
const Setting_Action Setting_Action_Action_MIN = Setting_Action_NONE;
const Setting_Action Setting_Action_Action_MAX = Setting_Action_SHUTDOWN;
const int Setting_Action_Action_ARRAYSIZE = Setting_Action_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* Setting_Action_descriptor();
inline const ::std::string& Setting_Action_Name(Setting_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    Setting_Action_descriptor(), value);
}
inline bool Setting_Action_Parse(
    const ::std::string& name, Setting_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Setting_Action>(
    Setting_Action_descriptor(), name, value);
}
enum Catalog {
  POWER = 0,
  TEMP = 1,
  FLOW = 2,
  PRESS = 3,
  Catalog_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Catalog_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Catalog_IsValid(int value);
const Catalog Catalog_MIN = POWER;
const Catalog Catalog_MAX = PRESS;
const int Catalog_ARRAYSIZE = Catalog_MAX + 1;

const ::google::protobuf::EnumDescriptor* Catalog_descriptor();
inline const ::std::string& Catalog_Name(Catalog value) {
  return ::google::protobuf::internal::NameOfEnum(
    Catalog_descriptor(), value);
}
inline bool Catalog_Parse(
    const ::std::string& name, Catalog* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Catalog>(
    Catalog_descriptor(), name, value);
}
// ===================================================================

class Login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eh2tech.Login) */ {
 public:
  Login();
  virtual ~Login();

  Login(const Login& from);

  inline Login& operator=(const Login& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login& default_instance();

  static inline const Login* internal_default_instance() {
    return reinterpret_cast<const Login*>(
               &_Login_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Login* other);

  // implements Message ----------------------------------------------

  inline Login* New() const PROTOBUF_FINAL { return New(NULL); }

  Login* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Login& from);
  void MergeFrom(const Login& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sn = 2;
  void clear_sn();
  static const int kSnFieldNumber = 2;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  #if LANG_CXX11
  void set_sn(::std::string&& value);
  #endif
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // string password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:eh2tech.Login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct protobuf_remote_5fpower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Answer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eh2tech.Answer) */ {
 public:
  Answer();
  virtual ~Answer();

  Answer(const Answer& from);

  inline Answer& operator=(const Answer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Answer& default_instance();

  static inline const Answer* internal_default_instance() {
    return reinterpret_cast<const Answer*>(
               &_Answer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Answer* other);

  // implements Message ----------------------------------------------

  inline Answer* New() const PROTOBUF_FINAL { return New(NULL); }

  Answer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Answer& from);
  void MergeFrom(const Answer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Answer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string comments = 3;
  void clear_comments();
  static const int kCommentsFieldNumber = 3;
  const ::std::string& comments() const;
  void set_comments(const ::std::string& value);
  #if LANG_CXX11
  void set_comments(::std::string&& value);
  #endif
  void set_comments(const char* value);
  void set_comments(const char* value, size_t size);
  ::std::string* mutable_comments();
  ::std::string* release_comments();
  void set_allocated_comments(::std::string* comments);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int64 err_no = 2;
  void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  ::google::protobuf::int64 err_no() const;
  void set_err_no(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:eh2tech.Answer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr comments_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 err_no_;
  mutable int _cached_size_;
  friend struct protobuf_remote_5fpower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Query : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eh2tech.Query) */ {
 public:
  Query();
  virtual ~Query();

  Query(const Query& from);

  inline Query& operator=(const Query& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Query& default_instance();

  static inline const Query* internal_default_instance() {
    return reinterpret_cast<const Query*>(
               &_Query_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Query* other);

  // implements Message ----------------------------------------------

  inline Query* New() const PROTOBUF_FINAL { return New(NULL); }

  Query* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Query& from);
  void MergeFrom(const Query& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Query* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sn = 2;
  void clear_sn();
  static const int kSnFieldNumber = 2;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  #if LANG_CXX11
  void set_sn(::std::string&& value);
  #endif
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // .eh2tech.Catalog cat = 3;
  void clear_cat();
  static const int kCatFieldNumber = 3;
  ::eh2tech::Catalog cat() const;
  void set_cat(::eh2tech::Catalog value);

  // @@protoc_insertion_point(class_scope:eh2tech.Query)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  ::google::protobuf::int64 id_;
  int cat_;
  mutable int _cached_size_;
  friend struct protobuf_remote_5fpower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryAnswer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eh2tech.QueryAnswer) */ {
 public:
  QueryAnswer();
  virtual ~QueryAnswer();

  QueryAnswer(const QueryAnswer& from);

  inline QueryAnswer& operator=(const QueryAnswer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAnswer& default_instance();

  static inline const QueryAnswer* internal_default_instance() {
    return reinterpret_cast<const QueryAnswer*>(
               &_QueryAnswer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(QueryAnswer* other);

  // implements Message ----------------------------------------------

  inline QueryAnswer* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryAnswer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryAnswer& from);
  void MergeFrom(const QueryAnswer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryAnswer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 data = 4;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  ::google::protobuf::int64 data(int index) const;
  void set_data(int index, ::google::protobuf::int64 value);
  void add_data(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_data();

  // string sn = 2;
  void clear_sn();
  static const int kSnFieldNumber = 2;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  #if LANG_CXX11
  void set_sn(::std::string&& value);
  #endif
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // string comments = 5;
  void clear_comments();
  static const int kCommentsFieldNumber = 5;
  const ::std::string& comments() const;
  void set_comments(const ::std::string& value);
  #if LANG_CXX11
  void set_comments(::std::string&& value);
  #endif
  void set_comments(const char* value);
  void set_comments(const char* value, size_t size);
  ::std::string* mutable_comments();
  ::std::string* release_comments();
  void set_allocated_comments(::std::string* comments);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int64 cat = 3;
  void clear_cat();
  static const int kCatFieldNumber = 3;
  ::google::protobuf::int64 cat() const;
  void set_cat(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:eh2tech.QueryAnswer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  ::google::protobuf::internal::ArenaStringPtr comments_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 cat_;
  mutable int _cached_size_;
  friend struct protobuf_remote_5fpower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Setting_CatFreq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eh2tech.Setting.CatFreq) */ {
 public:
  Setting_CatFreq();
  virtual ~Setting_CatFreq();

  Setting_CatFreq(const Setting_CatFreq& from);

  inline Setting_CatFreq& operator=(const Setting_CatFreq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Setting_CatFreq& default_instance();

  static inline const Setting_CatFreq* internal_default_instance() {
    return reinterpret_cast<const Setting_CatFreq*>(
               &_Setting_CatFreq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Setting_CatFreq* other);

  // implements Message ----------------------------------------------

  inline Setting_CatFreq* New() const PROTOBUF_FINAL { return New(NULL); }

  Setting_CatFreq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Setting_CatFreq& from);
  void MergeFrom(const Setting_CatFreq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Setting_CatFreq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eh2tech.Catalog cat = 1;
  void clear_cat();
  static const int kCatFieldNumber = 1;
  ::eh2tech::Catalog cat() const;
  void set_cat(::eh2tech::Catalog value);

  // uint32 freq = 2;
  void clear_freq();
  static const int kFreqFieldNumber = 2;
  ::google::protobuf::uint32 freq() const;
  void set_freq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eh2tech.Setting.CatFreq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int cat_;
  ::google::protobuf::uint32 freq_;
  mutable int _cached_size_;
  friend struct protobuf_remote_5fpower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Setting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eh2tech.Setting) */ {
 public:
  Setting();
  virtual ~Setting();

  Setting(const Setting& from);

  inline Setting& operator=(const Setting& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Setting& default_instance();

  static inline const Setting* internal_default_instance() {
    return reinterpret_cast<const Setting*>(
               &_Setting_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Setting* other);

  // implements Message ----------------------------------------------

  inline Setting* New() const PROTOBUF_FINAL { return New(NULL); }

  Setting* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Setting& from);
  void MergeFrom(const Setting& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Setting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Setting_CatFreq CatFreq;

  typedef Setting_Action Action;
  static const Action NONE =
    Setting_Action_NONE;
  static const Action START =
    Setting_Action_START;
  static const Action SHUTDOWN =
    Setting_Action_SHUTDOWN;
  static inline bool Action_IsValid(int value) {
    return Setting_Action_IsValid(value);
  }
  static const Action Action_MIN =
    Setting_Action_Action_MIN;
  static const Action Action_MAX =
    Setting_Action_Action_MAX;
  static const int Action_ARRAYSIZE =
    Setting_Action_Action_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Action_descriptor() {
    return Setting_Action_descriptor();
  }
  static inline const ::std::string& Action_Name(Action value) {
    return Setting_Action_Name(value);
  }
  static inline bool Action_Parse(const ::std::string& name,
      Action* value) {
    return Setting_Action_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .eh2tech.Setting.CatFreq catfreq = 2;
  int catfreq_size() const;
  void clear_catfreq();
  static const int kCatfreqFieldNumber = 2;
  const ::eh2tech::Setting_CatFreq& catfreq(int index) const;
  ::eh2tech::Setting_CatFreq* mutable_catfreq(int index);
  ::eh2tech::Setting_CatFreq* add_catfreq();
  ::google::protobuf::RepeatedPtrField< ::eh2tech::Setting_CatFreq >*
      mutable_catfreq();
  const ::google::protobuf::RepeatedPtrField< ::eh2tech::Setting_CatFreq >&
      catfreq() const;

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // .eh2tech.Setting.Action action = 3;
  void clear_action();
  static const int kActionFieldNumber = 3;
  ::eh2tech::Setting_Action action() const;
  void set_action(::eh2tech::Setting_Action value);

  // @@protoc_insertion_point(class_scope:eh2tech.Setting)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::eh2tech::Setting_CatFreq > catfreq_;
  ::google::protobuf::int64 id_;
  int action_;
  mutable int _cached_size_;
  friend struct protobuf_remote_5fpower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eh2tech.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Empty* other);

  // implements Message ----------------------------------------------

  inline Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eh2tech.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct protobuf_remote_5fpower_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Login

// int64 id = 1;
inline void Login::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Login::id() const {
  // @@protoc_insertion_point(field_get:eh2tech.Login.id)
  return id_;
}
inline void Login::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.Login.id)
}

// string sn = 2;
inline void Login::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login::sn() const {
  // @@protoc_insertion_point(field_get:eh2tech.Login.sn)
  return sn_.GetNoArena();
}
inline void Login::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eh2tech.Login.sn)
}
#if LANG_CXX11
inline void Login::set_sn(::std::string&& value) {
  
  sn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eh2tech.Login.sn)
}
#endif
inline void Login::set_sn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eh2tech.Login.sn)
}
inline void Login::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eh2tech.Login.sn)
}
inline ::std::string* Login::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:eh2tech.Login.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login::release_sn() {
  // @@protoc_insertion_point(field_release:eh2tech.Login.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:eh2tech.Login.sn)
}

// string password = 3;
inline void Login::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login::password() const {
  // @@protoc_insertion_point(field_get:eh2tech.Login.password)
  return password_.GetNoArena();
}
inline void Login::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eh2tech.Login.password)
}
#if LANG_CXX11
inline void Login::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eh2tech.Login.password)
}
#endif
inline void Login::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eh2tech.Login.password)
}
inline void Login::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eh2tech.Login.password)
}
inline ::std::string* Login::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:eh2tech.Login.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login::release_password() {
  // @@protoc_insertion_point(field_release:eh2tech.Login.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:eh2tech.Login.password)
}

// -------------------------------------------------------------------

// Answer

// int64 id = 1;
inline void Answer::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Answer::id() const {
  // @@protoc_insertion_point(field_get:eh2tech.Answer.id)
  return id_;
}
inline void Answer::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.Answer.id)
}

// int64 err_no = 2;
inline void Answer::clear_err_no() {
  err_no_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Answer::err_no() const {
  // @@protoc_insertion_point(field_get:eh2tech.Answer.err_no)
  return err_no_;
}
inline void Answer::set_err_no(::google::protobuf::int64 value) {
  
  err_no_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.Answer.err_no)
}

// string comments = 3;
inline void Answer::clear_comments() {
  comments_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Answer::comments() const {
  // @@protoc_insertion_point(field_get:eh2tech.Answer.comments)
  return comments_.GetNoArena();
}
inline void Answer::set_comments(const ::std::string& value) {
  
  comments_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eh2tech.Answer.comments)
}
#if LANG_CXX11
inline void Answer::set_comments(::std::string&& value) {
  
  comments_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eh2tech.Answer.comments)
}
#endif
inline void Answer::set_comments(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comments_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eh2tech.Answer.comments)
}
inline void Answer::set_comments(const char* value, size_t size) {
  
  comments_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eh2tech.Answer.comments)
}
inline ::std::string* Answer::mutable_comments() {
  
  // @@protoc_insertion_point(field_mutable:eh2tech.Answer.comments)
  return comments_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Answer::release_comments() {
  // @@protoc_insertion_point(field_release:eh2tech.Answer.comments)
  
  return comments_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Answer::set_allocated_comments(::std::string* comments) {
  if (comments != NULL) {
    
  } else {
    
  }
  comments_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comments);
  // @@protoc_insertion_point(field_set_allocated:eh2tech.Answer.comments)
}

// -------------------------------------------------------------------

// Query

// int64 id = 1;
inline void Query::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Query::id() const {
  // @@protoc_insertion_point(field_get:eh2tech.Query.id)
  return id_;
}
inline void Query::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.Query.id)
}

// string sn = 2;
inline void Query::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Query::sn() const {
  // @@protoc_insertion_point(field_get:eh2tech.Query.sn)
  return sn_.GetNoArena();
}
inline void Query::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eh2tech.Query.sn)
}
#if LANG_CXX11
inline void Query::set_sn(::std::string&& value) {
  
  sn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eh2tech.Query.sn)
}
#endif
inline void Query::set_sn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eh2tech.Query.sn)
}
inline void Query::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eh2tech.Query.sn)
}
inline ::std::string* Query::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:eh2tech.Query.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Query::release_sn() {
  // @@protoc_insertion_point(field_release:eh2tech.Query.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Query::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:eh2tech.Query.sn)
}

// .eh2tech.Catalog cat = 3;
inline void Query::clear_cat() {
  cat_ = 0;
}
inline ::eh2tech::Catalog Query::cat() const {
  // @@protoc_insertion_point(field_get:eh2tech.Query.cat)
  return static_cast< ::eh2tech::Catalog >(cat_);
}
inline void Query::set_cat(::eh2tech::Catalog value) {
  
  cat_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.Query.cat)
}

// -------------------------------------------------------------------

// QueryAnswer

// int64 id = 1;
inline void QueryAnswer::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 QueryAnswer::id() const {
  // @@protoc_insertion_point(field_get:eh2tech.QueryAnswer.id)
  return id_;
}
inline void QueryAnswer::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.QueryAnswer.id)
}

// string sn = 2;
inline void QueryAnswer::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAnswer::sn() const {
  // @@protoc_insertion_point(field_get:eh2tech.QueryAnswer.sn)
  return sn_.GetNoArena();
}
inline void QueryAnswer::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eh2tech.QueryAnswer.sn)
}
#if LANG_CXX11
inline void QueryAnswer::set_sn(::std::string&& value) {
  
  sn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eh2tech.QueryAnswer.sn)
}
#endif
inline void QueryAnswer::set_sn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eh2tech.QueryAnswer.sn)
}
inline void QueryAnswer::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eh2tech.QueryAnswer.sn)
}
inline ::std::string* QueryAnswer::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:eh2tech.QueryAnswer.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAnswer::release_sn() {
  // @@protoc_insertion_point(field_release:eh2tech.QueryAnswer.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAnswer::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:eh2tech.QueryAnswer.sn)
}

// int64 cat = 3;
inline void QueryAnswer::clear_cat() {
  cat_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 QueryAnswer::cat() const {
  // @@protoc_insertion_point(field_get:eh2tech.QueryAnswer.cat)
  return cat_;
}
inline void QueryAnswer::set_cat(::google::protobuf::int64 value) {
  
  cat_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.QueryAnswer.cat)
}

// repeated int64 data = 4;
inline int QueryAnswer::data_size() const {
  return data_.size();
}
inline void QueryAnswer::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int64 QueryAnswer::data(int index) const {
  // @@protoc_insertion_point(field_get:eh2tech.QueryAnswer.data)
  return data_.Get(index);
}
inline void QueryAnswer::set_data(int index, ::google::protobuf::int64 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:eh2tech.QueryAnswer.data)
}
inline void QueryAnswer::add_data(::google::protobuf::int64 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:eh2tech.QueryAnswer.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
QueryAnswer::data() const {
  // @@protoc_insertion_point(field_list:eh2tech.QueryAnswer.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
QueryAnswer::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:eh2tech.QueryAnswer.data)
  return &data_;
}

// string comments = 5;
inline void QueryAnswer::clear_comments() {
  comments_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryAnswer::comments() const {
  // @@protoc_insertion_point(field_get:eh2tech.QueryAnswer.comments)
  return comments_.GetNoArena();
}
inline void QueryAnswer::set_comments(const ::std::string& value) {
  
  comments_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eh2tech.QueryAnswer.comments)
}
#if LANG_CXX11
inline void QueryAnswer::set_comments(::std::string&& value) {
  
  comments_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eh2tech.QueryAnswer.comments)
}
#endif
inline void QueryAnswer::set_comments(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comments_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eh2tech.QueryAnswer.comments)
}
inline void QueryAnswer::set_comments(const char* value, size_t size) {
  
  comments_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eh2tech.QueryAnswer.comments)
}
inline ::std::string* QueryAnswer::mutable_comments() {
  
  // @@protoc_insertion_point(field_mutable:eh2tech.QueryAnswer.comments)
  return comments_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryAnswer::release_comments() {
  // @@protoc_insertion_point(field_release:eh2tech.QueryAnswer.comments)
  
  return comments_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryAnswer::set_allocated_comments(::std::string* comments) {
  if (comments != NULL) {
    
  } else {
    
  }
  comments_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comments);
  // @@protoc_insertion_point(field_set_allocated:eh2tech.QueryAnswer.comments)
}

// -------------------------------------------------------------------

// Setting_CatFreq

// .eh2tech.Catalog cat = 1;
inline void Setting_CatFreq::clear_cat() {
  cat_ = 0;
}
inline ::eh2tech::Catalog Setting_CatFreq::cat() const {
  // @@protoc_insertion_point(field_get:eh2tech.Setting.CatFreq.cat)
  return static_cast< ::eh2tech::Catalog >(cat_);
}
inline void Setting_CatFreq::set_cat(::eh2tech::Catalog value) {
  
  cat_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.Setting.CatFreq.cat)
}

// uint32 freq = 2;
inline void Setting_CatFreq::clear_freq() {
  freq_ = 0u;
}
inline ::google::protobuf::uint32 Setting_CatFreq::freq() const {
  // @@protoc_insertion_point(field_get:eh2tech.Setting.CatFreq.freq)
  return freq_;
}
inline void Setting_CatFreq::set_freq(::google::protobuf::uint32 value) {
  
  freq_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.Setting.CatFreq.freq)
}

// -------------------------------------------------------------------

// Setting

// int64 id = 1;
inline void Setting::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Setting::id() const {
  // @@protoc_insertion_point(field_get:eh2tech.Setting.id)
  return id_;
}
inline void Setting::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.Setting.id)
}

// repeated .eh2tech.Setting.CatFreq catfreq = 2;
inline int Setting::catfreq_size() const {
  return catfreq_.size();
}
inline void Setting::clear_catfreq() {
  catfreq_.Clear();
}
inline const ::eh2tech::Setting_CatFreq& Setting::catfreq(int index) const {
  // @@protoc_insertion_point(field_get:eh2tech.Setting.catfreq)
  return catfreq_.Get(index);
}
inline ::eh2tech::Setting_CatFreq* Setting::mutable_catfreq(int index) {
  // @@protoc_insertion_point(field_mutable:eh2tech.Setting.catfreq)
  return catfreq_.Mutable(index);
}
inline ::eh2tech::Setting_CatFreq* Setting::add_catfreq() {
  // @@protoc_insertion_point(field_add:eh2tech.Setting.catfreq)
  return catfreq_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::eh2tech::Setting_CatFreq >*
Setting::mutable_catfreq() {
  // @@protoc_insertion_point(field_mutable_list:eh2tech.Setting.catfreq)
  return &catfreq_;
}
inline const ::google::protobuf::RepeatedPtrField< ::eh2tech::Setting_CatFreq >&
Setting::catfreq() const {
  // @@protoc_insertion_point(field_list:eh2tech.Setting.catfreq)
  return catfreq_;
}

// .eh2tech.Setting.Action action = 3;
inline void Setting::clear_action() {
  action_ = 0;
}
inline ::eh2tech::Setting_Action Setting::action() const {
  // @@protoc_insertion_point(field_get:eh2tech.Setting.action)
  return static_cast< ::eh2tech::Setting_Action >(action_);
}
inline void Setting::set_action(::eh2tech::Setting_Action value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.Setting.action)
}

// -------------------------------------------------------------------

// Empty

// int32 id = 1;
inline void Empty::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Empty::id() const {
  // @@protoc_insertion_point(field_get:eh2tech.Empty.id)
  return id_;
}
inline void Empty::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:eh2tech.Empty.id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace eh2tech

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::eh2tech::Setting_Action> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eh2tech::Setting_Action>() {
  return ::eh2tech::Setting_Action_descriptor();
}
template <> struct is_proto_enum< ::eh2tech::Catalog> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eh2tech::Catalog>() {
  return ::eh2tech::Catalog_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_remote_5fpower_2eproto__INCLUDED
